Dvorak keyboard layout

       ESC FFFFF FFFFF DEL
	 ` 12345 67890 [] BCK
       TAB ',.py fgcrl /= \
       CLK aoeui dhtns -  ENT
       SHF ;qjkx bmwvz SHF
       CTL ALT SPC ALT CTL arrows

Commands are denoted here in these notes by ^, which signifies use
of Control, Alt, or a leading Escape before a key.  (Some Control
keys don't work the same in a Linux console; Escape always works.
Control-[ is the same as Escape.)

Non-command characters are inserted or searched for.
Self-insertion automatically cuts when cursor < mark.

There are multiple windows, views, and texts.  Every window has a view,
but not every view has a window.  Every view has a text and every text
has at least one view.  Some texts have files.  The cursor, mark, and
macro are local to their view.

* below means "must be this character".
() indicate synonyms
[;] indicate variants activated by ^Space, possibly with value
/  indicates behavior with mark unset / set

Command characters
*  ESC	function keys and query responses, ALT
  ^@	(^Space)
  ^^	literal, control [; unicode]
* ^[	(ESC)
  ^]	move to corresponding or nearest bracket
*  TAB	tab / tab completion [align; set tab stop]
  ^P	select another window [closing current]
  ^Y	split window [vertically] / narrow to selection
  ^F	/ copy [pre/append]
  ^G	backward to line start
  ^C	forward to line end
  ^R	backward screen [beginning of view]
  ^L	forward screen [end of view]
  ^/	(^_) incremental search mode [regexp]
* ^?	(BCK) delete character before cursor
* ^+	-- larger font
  ^\	[quit without saving]
* ^A	-- reserved for screen(1)
  ^O	macro end, execute [macro start]
  ^E	shell [end children] / pipe clipbuffer to command
  ^U	undo [redo]
* ^I	(TAB)
  ^D	cut char [select whitespace] / cut [pre/append]
  ^H	backward char(s)
  ^T	forward char(s)
  ^N	backward word(s) [sentence]
  ^S	forward word(s) [sentence]
* ^-	-- smaller font
* ^_	(^/)
*  ENT	(^M) newline [open line]
  ^ENT	(^J) newline and alignment
  ^Q	suspend editor [quit]
* ^J	(^ENT)
  ^K	save all [single]
  ^X	get path / visit file [set path]
  ^B	paste / exchange with clip buffer [; register]
* ^M	(ENT)
  ^W	select other view [closing current]
  ^V	set/unset mark [select line / exchange mark with cursor]
  ^Z	recenter view [single window, reset display; go to line]
 ^Space	(^@) variant, beginning of value

Non-control characters -- commands must be [variants]
  =	[; set bookmark]
  -	[; goto bookmark]
  ;	[new anonymous text]
  '	[go to tag]
  ,	[; fold view on indentation] / [fold selection]
  .	[unfold; unfold entire view]
  0-9	decimal argument (for ^Z, ^H/^T/^N/^S, ^^)
  x 0-9 a-f A-F		hexadecimal argument
  unused: ` ~ ! @ # $ % & ( ) { } " <  >  | :
  F-keys:
	F1 is help, F11 is full-screen on/off
	F2 OQ  F3 OR  F4 OS
	F5 [15~  F6 [17~  F7 [18~  F8 [19~
	F9 [20~  F10 [21~  F12 [24~

Missing features:
	color cue for clean/dirty text

Idioms
- search and replace: cut replacement text, search for first occurrence,
  then repeat ^B^F^/^/ to exchange target with replacement, restore
  replacement text in the clip buffer, and proceed to the next hit
- also, can pipe text through sed 's/X/Y/g' for global replacement
- also, can use a macro
- exchanging cursor and mark and then retyping with automatic cut
  is often faster than an explicit cut.
